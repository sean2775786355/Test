<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.safewind.pms.mapper.PublishDao" >
  <resultMap id="BaseResultMap" type="com.safewind.pms.po.Publish" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="is_for_boat" property="isForBoat" jdbcType="INTEGER" />
    <result column="sailor_id" property="sailorId" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="is_reply" property="isReply" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.safewind.pms.po.Publish" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, subject, is_for_boat, sailor_id, publish_time, reply_time, is_del, is_reply
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hh_publish
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hh_publish
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.safewind.pms.po.Publish" >
    insert into hh_publish (id, subject, is_for_boat, 
      sailor_id, publish_time, reply_time, 
      is_del, is_reply, content
      )
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{isForBoat,jdbcType=INTEGER}, 
      #{sailorId,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, #{replyTime,jdbcType=TIMESTAMP},
      #{isDel,jdbcType=INTEGER}, #{isReply,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.safewind.pms.po.Publish" >
    insert into hh_publish
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="isForBoat != null" >
        is_for_boat,
      </if>
      <if test="sailorId != null" >
        sailor_id,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="isReply != null" >
        is_reply,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="isForBoat != null" >
        #{isForBoat,jdbcType=INTEGER},
      </if>
      <if test="sailorId != null" >
        #{sailorId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isReply != null" >
        #{isReply,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.safewind.pms.po.Publish" >
    update hh_publish
    <set >
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="isForBoat != null" >
        is_for_boat = #{isForBoat,jdbcType=INTEGER},
      </if>
      <if test="sailorId != null" >
        sailor_id = #{sailorId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isReply != null" >
        is_reply = #{isReply,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.safewind.pms.po.Publish" >
    update hh_publish
    set subject = #{subject,jdbcType=VARCHAR},
      is_for_boat = #{isForBoat,jdbcType=INTEGER},
      sailor_id = #{sailorId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      is_reply = #{isReply,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.safewind.pms.po.Publish" >
    update hh_publish
    set subject = #{subject,jdbcType=VARCHAR},
      is_for_boat = #{isForBoat,jdbcType=INTEGER},
      sailor_id = #{sailorId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      is_reply = #{isReply,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getPublishListForSailorBySailorId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from hh_publish
        where sailor_id = #{0} AND is_del = 0 AND is_for_boat = 0
    </select>

  <select id="getPublishReplyList" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hh_publish
    where is_del = 0
  </select>

  <select id="getPublishListForBoatBySailorId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hh_publish
    where is_del = 0 AND is_for_boat = 1 AND sailor_id = (
      SELECT sailor_id
      from hh_attemper
      WHERE duty = 1 AND boat_id = (
        SELECT boat_id
        FROM hh_attemper
        WHERE sailor_id = #{0}
      )
    )
  </select>

</mapper>